apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.example.android.androidarchkotlin"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        buildTypes.each {
            it.buildConfigField 'String', 'ApiBaseUrl', API_BASE_URL
        }
    }
    buildToolsVersion buildToolsVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // KTX
    implementation "androidx.core:core-ktx:1.3.0"
    implementation "androidx.activity:activity-ktx:1.1.0"

    //Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayout"

    //Tests
    testImplementation "junit:junit:$rootProject.junit"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junit_android_x"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso"

    //Android Support
    implementation "androidx.legacy:legacy-support-v4:$rootProject.legacy_support"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat"
    implementation "androidx.preference:preference:$rootProject.preference"
    implementation "androidx.media:media:$rootProject.media"

    //Material
    implementation "com.google.android.material:material:$rootProject.material"

    // Anko Commons
    implementation "org.jetbrains.anko:anko-commons:$rootProject.anko"
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$rootProject.anko"

    // Architecture Components

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$rootProject.lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycle"


    // Room
    implementation "androidx.room:room-runtime:$rootProject.room"
    implementation "androidx.room:room-ktx:$rootProject.room"
    kapt "androidx.room:room-compiler:$rootProject.room"

    //Dagger
    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    //Gson
    implementation "com.google.code.gson:gson:$rootProject.gson"

    //Logging Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.logging_interceptor"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
}
